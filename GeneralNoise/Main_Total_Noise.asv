clc
clear all
close all
%% Add Datasets
addpath('/Users/alejandralandinez/Documents/MATLAB/mcode/tesis/Training_data/db');
addpath('/Users/alejandralandinez/Documents/MATLAB/mcode/tesis/Training_data/NoiseProofs');
[mediamuestral,TamRealizaciones]=GetAveragedNoise();
%% Initial Conditions
% j represents the number of realization to extract error individually
j = 1;
%% W values according the realization: P(k,W)
% Realization 1: W = 4
W = 4;
% Get and save signals in 'Realizaciones'
% NOISE MODEL PARAMETERS
% LPC COEFFICIENTS
LPCActivity1 = 3500;
LPCActivity6 = 2230;
LPCActivity = 7000;
% AVERAGE MEAN
windowsizeRest = 40;
windowsizeRun = 30;

%% Parameters for findpeaks Function
% MinPeakWidth
MinPeakWidthRest1 = 0.11;
MinPeakWidthRun_2 = 0.01;
MinPeakWidthRun_3 = 0.07;
MinPeakWidthRun_4 = 0.07;
MinPeakWidthRun_5 = 0.07;
MinPeakWidthRest6 = 0.05;
% MaxWidthPeak in PPG
MaxWidthRest1 = 0.5;
MaxWidthRun2 = 0.6;
MaxWidthRun3 = 0.5;
MaxWidthRun4 = 0.8;
MaxWidthRun5 = 0.8;
MaxWidthRest6 = 1.5;
% Prominence in PPG
ProminenceInRest1 = 0.009;
ProminenceRun2 = 0.049;
ProminenceRun3 = 0.038;
ProminenceRun4 = 0.04;
ProminenceRun5 = 0.04;
ProminenceInRest6 = 0.01;
% Min peak Distance in PPG
MinDistRest1 = 0.3;
MinDistRun2 = 0.1;
MinDistRun3 = 0.1;
MinDistRun4 = 0.15;
MinDistRun5 = 0.1;
MinDistRest6 = 0.2;
%% PARAMETERS IN ECG SIGNAL
% Min Height in ECG
MinHeightECGRest1 = 0.025;
MinHeightECGRun2  = 0.025;
MinHeightECGRun3  = 0.04;
MinHeightECGRun4  = 0.04;
MinHeightECGRun5  = 0.04;
MinHeightECGRest6 = 0.04;
%Min Dist in ECG
minDistRest1  = 0.6;
minDistRun2   = 0.5;
minDistRun3   = 0.2;
minDistRun4   = 0.2;
minDistRun5   = 0.2;
minDistRest6  = 0.2;
%Max Width in ECG
MaxPeakWidthECG1  = 0.05;
MaxPeakWidthECG2  = 0.05;
MaxPeakWidthECG3  = 0.05;
MaxPeakWidthECG4  = 0.05;
MaxPeakWidthECG5  = 0.05;
MaxPeakWidthECG6  = 0.05;

%% EXTRACT PPG & ECG SIGNALS FROM IEEE PROCESSING CUP DATASET
for k = 1:12
    if k >= 10
        labelstring = int2str(k);
        word = strcat({'DATA_'},labelstring,{'_TYPE02.mat'});
        a = load(char(word));
        PPGdatasetSignals(k,:) = a.sig(2,(1:length(mediamuestral)));
        ECGdatasetSignals(k,:)=a.sig(1,(1:length(mediamuestral)));
    else
        labelstring = int2str(k);
        word = strcat({'DATA_0'},labelstring,{'_TYPE02.mat'});
        a = load(char(word));
        PPGdatasetSignals(k,:) = a.sig(2,(1:length(mediamuestral)));
        ECGdatasetSignals(k,:)=a.sig(1,(1:length(mediamuestral)));
    end
end
%% ECG PEAKS EXTRACTION
% Sample Frequency
    Fs = 125;
%Convert to physical values: According to timesheet of the used wearable
ECGFullSignals = (ECGdatasetSignals-128)./255;
PPGFullSignals = (PPGdatasetSignals-128)/(255);

% Normalize the entire signal of all realizations.
for k=1:12
    PPGFullNorm(k,:) = (PPGFullSignals(k,:)-min(PPGFullSignals(k,:)))/(max(PPGFullSignals(k,:))-min(PPGFullSignals(k,:)));
    ECGFullNorm(k,:) = (ECGFullSignals(k,:)-min(ECGFullSignals(k,:)))./(max(ECGFullSignals(k,:))-min(ECGFullSignals(k,:)));
end
    
%% Separate Activities
% PPG Signal activities
Activity1=PPGFullNorm(:,(1:3750));
Activity2=PPGFullNorm(:,(3751:11250));
Activity3=PPGFullNorm(:,(11251:18750));
Activity4=PPGFullNorm(:,(18751:26250));
Activity5=PPGFullNorm(:,(26251:33750));
Activity6=PPGFullNorm(:,(33751:end));
% ECG signal activities
ActivityECG1=ECGFullNorm(:,(1:3750));
ActivityECG2=ECGFullNorm(:,(3751:11250));
ActivityECG3=ECGFullNorm(:,(11251:18750));
ActivityECG4=ECGFullNorm(:,(18751:26250));
ActivityECG5=ECGFullNorm(:,(26251:33750));
ActivityECG6=ECGFullNorm(:,(33751:end));


%% CLEAN ECG SIGNAL'S DATASET FROM DRIFT BASELINE NOISE COMPONENT
for k=1:12
    CleanedActivityECG1(k,:)=DenoiseECG(ActivityECG1(k,:));
    CleanedActivityECG2(k,:)=DenoiseECG(ActivityECG2(k,:));
    CleanedActivityECG3(k,:)=DenoiseECG(ActivityECG3(k,:));
    CleanedActivityECG4(k,:)=DenoiseECG(ActivityECG4(k,:));
    CleanedActivityECG5(k,:)=DenoiseECG(ActivityECG5(k,:));
    CleanedActivityECG6(k,:)=DenoiseECG(ActivityECG6(k,:));
end
% Find BIASED MSE
for  k = 1
   RESTA = Activity1 
end

%% Separate noise for PPG with its correspondent activity.
Noise1 = mediamuestral(1:3750);
Noise2 = mediamuestral(3751:11250);
Noise3 = mediamuestral(11251:18750);
Noise4 = mediamuestral(18751:26250);
Noise5 = mediamuestral(26251:33750);
Noise6 = mediamuestral(33751:end);

%% Detrend noise by activities.
nRest = 10;
nRun = 10;
DetrendedNoise1=Detrending(Noise1(1,:),nRest);
DetrendedNoise2=Detrending(Noise2(1,:),nRun);
DetrendedNoise3=Detrending(Noise3(1,:),nRun);
DetrendedNoise4=Detrending(Noise4(1,:),nRun);
DetrendedNoise5=Detrending(Noise5(1,:),nRun);
DetrendedNoise6=Detrending(Noise6(1,:),nRest);
% Wandering baseline extraction
DriftBaseline1=Noise1-DetrendedNoise1;
DriftBaseline2=Noise2-DetrendedNoise2;
DriftBaseline3=Noise3-DetrendedNoise3;
DriftBaseline4=Noise4-DetrendedNoise4;
DriftBaseline5=Noise5-DetrendedNoise5;
DriftBaseline6=Noise6-DetrendedNoise6;

%% 1.Findpeaks model based on Savitzky smoothing filter.
% High frequency component
% change this parameter to obtain errors from different realizations
%   Ruido total 2: o(t) = n(t)+w(t)
    TotalS=mediamuestral;
% Cleaning signal with MA
    CleanedSignal1  = Activity1 - TotalS(1,(1:3750));
    CleanedSignal2  = Activity2 - TotalS(1,(3751:11250));
    CleanedSignal3  = Activity3 - TotalS(1,(11251:18750));
    CleanedSignal4  = Activity4 - TotalS(1,(18751:26250));
    CleanedSignal15 = Activity5 - TotalS(1,(26251:33750));
    CleanedSignal16 = Activity6 - TotalS(1,(33751:35989));
    %% ERROR FOR SAVITZKY
disp('ERRORES CALCULADOS POR SAVITZKY')
findErrors(Activity1(j,:),Activity2(j,:),Activity3(j,:),Activity4(j,:),Activity5(j,:),Activity6(j,:),...
    CleanedSignal1(j,:),CleanedSignal2(j,:),CleanedSignal3(j,:),CleanedSignal4(j,:),CleanedSignal15(j,:),CleanedSignal16(j,:), ...
    Fs,MinPeakWidthRest1,MinPeakWidthRun_2,MinPeakWidthRun_3,MinPeakWidthRun_4,MinPeakWidthRun_5,MinPeakWidthRest6,...
    MaxWidthRest1,MaxWidthRun2,MaxWidthRun3,MaxWidthRun4,MaxWidthRun5,MaxWidthRest6,...
    ProminenceInRest1,ProminenceRun2,ProminenceRun3,ProminenceRun4,ProminenceRun5,ProminenceInRest6,...
    MinDistRest1,MinDistRun2,MinDistRun3,MinDistRun4,MinDistRun5,MinDistRest6,...
    CleanedActivityECG1(j,:),CleanedActivityECG2(j,:),CleanedActivityECG3(j,:),...
    CleanedActivityECG4(j,:),CleanedActivityECG5(j,:),CleanedActivityECG6(j,:),...
    MinHeightECGRest1,MinHeightECGRun2,MinHeightECGRun3,MinHeightECGRun4,MinHeightECGRun5,MinHeightECGRest6,...
    minDistRest1,minDistRun2,minDistRun3,minDistRun4,minDistRun5,minDistRest6,...
    MaxPeakWidthECG1,MaxPeakWidthECG2,MaxPeakWidthECG3,MaxPeakWidthECG4,MaxPeakWidthECG5,MaxPeakWidthECG6);
%% 2. % TOTAL LINEAR PREDICTOR ARTIFITIAL NOISE.
% High frequency component
     LP(1:3750)      = Function_1_LP(DriftBaseline1,LPCActivity1);  
     LP(3751:11250)  = Function_1_LP(DriftBaseline2,LPCActivity);    
     LP(11251:18750) = Function_1_LP(DriftBaseline3,LPCActivity);   
     LP(18751:26250) = Function_1_LP(DriftBaseline4,LPCActivity);   
     LP(26251:33750) = Function_1_LP(DriftBaseline5,LPCActivity);   
     LP(33751:35989) = Function_1_LP(DriftBaseline6,LPCActivity6); 
% TOTAL NOISE: o(t) = n(t)+w(t)
% **Drift baseline (Low frequency component) is added
% This noise includes lpc linear predictor with the described orders
% also includes filter for modeling average noise extracted from signal.
    TotalLP(1:3750)      = DetrendedNoise1 + LP(1:3750);
    TotalLP(3751:11250)  = DetrendedNoise2 + LP(3751:11250);
    TotalLP(11251:18750) = DetrendedNoise3 + LP(11251:18750);
    TotalLP(18751:26250) = DetrendedNoise4 + LP(18751:26250);
    TotalLP(26251:33750) = DetrendedNoise5 + LP(26251:33750);
    TotalLP(33751:35989) = DetrendedNoise6 + LP(33751:35989);
% Cleaning signal with LP
    CleanedLP1 = Activity1 - TotalLP(1:3750);
    CleanedLP2 = Activity2 - TotalLP(3751:11250);
    CleanedLP3 = Activity3 - TotalLP(11251:18750);
    CleanedLP4 = Activity4 - TotalLP(18751:26250);
    CleanedLP5 = Activity5 - TotalLP(26251:33750);
    CleanedLP6 = Activity6 - TotalLP(33751:35989);
    %% ERROR FOR LP , ...
disp('ERRORES CALCULADOS POR LINEAR PREDICTOR')
findErrors(Activity1(j,:),Activity2(j,:),Activity3(j,:),Activity4(j,:),Activity5(j,:),Activity6(j,:),...
    CleanedLP1(j,:),CleanedLP2(j,:),CleanedLP3(j,:),CleanedLP4(j,:),CleanedLP5(j,:),CleanedLP6(j,:), ...
    Fs,MinPeakWidthRest1,MinPeakWidthRun_2,MinPeakWidthRun_3,MinPeakWidthRun_4,MinPeakWidthRun_5,MinPeakWidthRest6,...
    MaxWidthRest1,MaxWidthRun2,MaxWidthRun3,MaxWidthRun4,MaxWidthRun5,MaxWidthRest6,...
    ProminenceInRest1,ProminenceRun2,ProminenceRun3,ProminenceRun4,ProminenceRun5,ProminenceInRest6,...
    MinDistRest1,MinDistRun2,MinDistRun3,MinDistRun4,MinDistRun5,MinDistRest6,...
    CleanedActivityECG1(j,:),CleanedActivityECG2(j,:),CleanedActivityECG3(j,:),...
    CleanedActivityECG4(j,:),CleanedActivityECG5(j,:),CleanedActivityECG6(j,:),...
    MinHeightECGRest1,MinHeightECGRun2,MinHeightECGRun3,MinHeightECGRun4,MinHeightECGRun5,MinHeightECGRest6,...
    minDistRest1,minDistRun2,minDistRun3,minDistRun4,minDistRun5,minDistRest6,...
    MaxPeakWidthECG1,MaxPeakWidthECG2,MaxPeakWidthECG3,MaxPeakWidthECG4,MaxPeakWidthECG5,MaxPeakWidthECG6);
%% 3. Moving average for artifitial noise modeling
    MA(1:3750)      = Function_2_MA(DetrendedNoise1,windowsizeRest);
    MA(3751:11250)  = Function_2_MA(DetrendedNoise2,windowsizeRun);
    MA(11251:18750) = Function_2_MA(DetrendedNoise3,windowsizeRun);
    MA(18751:26250) = Function_2_MA(DetrendedNoise4,windowsizeRun);
    MA(26251:33750) = Function_2_MA(DetrendedNoise5,windowsizeRun);
    MA(33751:35989) = Function_2_MA(DetrendedNoise6,windowsizeRest);
%   Ruido total 2: o(t) = n(t)+w(t)
    TotalMA(1:3750)      = DriftBaseline1 + MA(1:3750);
    TotalMA(3751:11250)  = DriftBaseline2 + MA(3751:11250);
    TotalMA(11251:18750) = DriftBaseline3 + MA(11251:18750);
    TotalMA(18751:26250) = DriftBaseline4 + MA(18751:26250);
    TotalMA(26251:33750) = DriftBaseline5 + MA(26251:33750);
    TotalMA(33751:35989) = DriftBaseline6 + MA(33751:35989);
    % Cleaning signal with MA
    CleanedMA1 = Activity1 - TotalMA(1:3750);
    CleanedMA2 = Activity2 - TotalMA(3751:11250);
    CleanedMA3 = Activity3 - TotalMA(11251:18750);
    CleanedMA4 = Activity4 - TotalMA(18751:26250);
    CleanedMA5 = Activity5 - TotalMA(26251:33750);
    CleanedMA6 = Activity6 - TotalMA(33751:35989);
% Plotting noise models
 figure
 t = [0:length(mediamuestral)-1]./125;
 plot(t,TotalLP,t,TotalMA,t,mediamuestral),title('Final Artificial Noise Models'),ylabel('Magnitude'), xlabel('Time (s)'),grid on, axis tight,
legend('Linear Predictor LPC + filtering Model','Moving Average model','Savitzky smoothing Model')
findErrors(sNorm(k,:),Activity1(k,:),Activity2(k,:),Activity3(k,:),Activity4(k,:),Activity5(k,:),Activity6(k,:),...
    CleanedMA1(k,:),CleanedMA2(k,:),CleanedMA3(k,:),CleanedMA4(k,:),CleanedMA5(k,:),CleanedMA6(k,:), ...
    Fs,MinPeakWidthRest1,MinPeakWidthRun_2,MinPeakWidthRun_3,MinPeakWidthRun_4,MinPeakWidthRun_5,MinPeakWidthRest6,...
    MaxWidthRest1,MaxWidthRun2,MaxWidthRun3,MaxWidthRun4,MaxWidthRun5,MaxWidthRest6,...
    ProminenceInRest1,ProminenceRun2,ProminenceRun3,ProminenceRun4,ProminenceRun5,ProminenceInRest6,...
    MinDistRest1,MinDistRun2,MinDistRun3,MinDistRun4,MinDistRun5,MinDistRest6,...
    CleanedActivityECG1(k,:),CleanedActivityECG2(k,:),CleanedActivityECG3(k,:),...
    CleanedActivityECG4(k,:),CleanedActivityECG5(k,:),CleanedActivityECG6(k,:),...
    MinHeightECGRest1,MinHeightECGRun2,MinHeightECGRun3,MinHeightECGRun4,MinHeightECGRun5,MinHeightECGRest6,...
    minDistRest1,minDistRun2,minDistRun3,minDistRun4,minDistRun5,minDistRest6,...
    maxWidthRest1,maxWidthRun2,maxWidthRun3,maxWidthRun4,maxWidthRun5,maxWidthRest6);

